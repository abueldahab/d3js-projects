// Generated by CoffeeScript 1.6.3
(function() {
  var $container, demoData;

  demoData = [
    {
      id: 'flags',
      name: 'Flags',
      parentId: null
    }, {
      id: 'france',
      name: 'France',
      parentId: 'flags',
      color: '#FF0000',
      position: 1
    }, {
      id: 'fr_blue',
      name: 'Parisian Blue',
      parentId: 'france',
      color: '#0055A4',
      position: 1
    }, {
      id: 'fr_white',
      name: 'Royal White',
      parentId: 'france',
      color: '#ddd',
      position: 2
    }, {
      id: 'fr_red',
      name: 'Republican Red',
      parentId: 'france',
      color: '#EF4135',
      position: 3
    }, {
      id: 'usa',
      name: 'United States',
      parentId: 'flags',
      color: '#00A200',
      position: 2
    }, {
      id: 'usa_white',
      name: 'White',
      parentId: 'usa',
      color: '#ddd',
      position: 1
    }, {
      id: 'usa_red',
      name: 'Old Glory Red',
      parentId: 'usa',
      color: '#B22234',
      position: 2
    }, {
      id: 'usa_blue',
      name: 'Old Glory Blue',
      parentId: 'usa',
      color: '#3C3B6E',
      position: 3
    }
  ];

  $container = $('<div/>').attr('height', 500);

  describe("dendrogram", function() {
    beforeEach(function() {
      var _this = this;
      runs(function() {
        return require(['d3', "stc_dendrogram"], function(d3, graph) {
          _this.d3 = d3;
          _this.graph = graph;
          return spyOn(_this.d3.layout, 'tree').andCallThrough();
        });
      });
      return waitsFor(function() {
        return this.graph;
      });
    });
    it("should not be null", function() {
      return runs(function() {
        return expect(this.graph).toBeDefined();
      });
    });
    it("should have a bind graph", function() {
      return runs(function() {
        return expect(this.graph.bind).toBeDefined();
      });
    });
    return describe("layout", function() {
      it("should have create a tree layout", function() {
        return runs(function() {
          this.graph.bind({}, $container, demoData);
          return expect(this.d3.layout.tree).toHaveBeenCalled();
        });
      });
      return it("should have create a tree layout with the correct width and height", function() {
        return runs(function() {
          this.graph.bind({}, $container, demoData);
          return expect(this.d3.layout.tree).toHaveBeenCalled();
        });
      });
    });
  });

}).call(this);

/*
//@ sourceMappingURL=stc_dendrogram_test.map
*/
